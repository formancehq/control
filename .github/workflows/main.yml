on:
  push:
    branches:
      - main
  pull_request:
    types: [assigned, opened, synchronize, reopened]
  release:
    types: [prereleased, released]

name: Main
jobs:
  Pr:
    if: github.event_name == 'pull_request'
    uses: formancehq/gh-workflows/.github/workflows/pr-style.yml@main

  Lint:
    name: 'Lint'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - run: yarn install
      - run: yarn run lint

  # Todo: Add Test
  #  Test:
  #    uses: formancehq/gh-workflows/.github/workflows/golang-test.yml@main

  Docker:
    name: 'Build Docker'
    runs-on: ubuntu-latest
    needs:
      - Lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - run: yarn install
      - run: yarn run build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: 'NumaryBot'
          password: ${{ secrets.NUMARY_GITHUB_TOKEN }}
      - name: Build and push Released
        if: github.event.action == 'released'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          target: app
          push: true
          tags: ghcr.io/formancehq/control:latest,ghcr.io/formancehq/control:${{ github.event.release.tag_name }}
          build-args: |
            APP_SHA=${{ github.sha }}
            VERSION=${{ github.event.release.tag_name }}
      - name: Build and push PreReleased
        if: github.event.action == 'prereleased'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          target: app
          push: true
          tags: ghcr.io/formancehq/control:${{ github.event.release.tag_name }}
          build-args: |
            APP_SHA=${{ github.sha }}
            VERSION=${{ github.event.release.tag_name }}
      - name: Build and push
        if: github.event.action != 'released' || github.event.action != 'prereleased'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          target: app
          push: true
          tags: ghcr.io/formancehq/control:${{ github.sha }}
          build-args: |
            APP_SHA=${{ github.sha }}
            VERSION=develop

  Assets:
    name: "Push Assets to S3"
    runs-on: ubuntu-latest
    if: github.event.action == 'released'
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::288350113309:role/github-access
          aws-region: us-east-1
      - name: Copy files to the bucket with the AWS CLI
        run: |
          aws s3 sync . s3://production-us-east-1-assets/control/